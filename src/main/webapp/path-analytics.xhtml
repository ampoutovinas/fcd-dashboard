<?xml version="1.0" encoding="UTF-8"?>
<ui:composition xmlns="http://www.w3.org/1999/xhtml"
                xmlns:ui="http://java.sun.com/jsf/facelets"
                xmlns:p="http://primefaces.org/ui"
                xmlns:h="http://java.sun.com/jsf/html"
                template="/WEB-INF/templates/template.xhtml">

    <ui:define name="head-end">
        <style type="text/css">
            .ui-datatable .ui-datatable-header {
                text-align: right !important;
            }
            body div.ui-datalist-content {
                border: none;
                text-align: center;
            }
            body div.ui-datalist .ui-datalist-data .ui-datalist-item {
                font-weight: normal;
            }
            body div.ui-datalist .ui-paginator {
                border: none !important;
            }
            #visitorsByMonthChart {
                height: 200px;
            }
            #visitorsByPageChart {
                height: 400px;
            }
            #visitorsByCountryChart {
                height: 450px;
            }
            .ui-panel .leaflet-container {
                width: 100%;
                height: 400px
            }
            @media (max-width: 1280px) {
                #visitorsByPageChart {
                    height: 325px;
                }
                .ui-panel .leaflet-container {
                    width: 100%;
                    height: 350px
                }
            }
            @media (max-width: 768px) {
                #visitorsByMonthChart {
                    height: 250px;
                }
                #visitorsByPageChart {
                    height: 275px;
                }
                #visitorsByCountryChart {
                    height: 350px;
                }
                .ui-panel .leaflet-container {
                    height: 300px
                }
            }
            @media (max-width: 640px) {
                #visitorsByMonthChart {
                    height: 275px;
                }
                #visitorsByPageChart {
                    height: 200px;
                }
                #visitorsByCountryChart {
                    height: 250px;
                }
                .ui-panel .leaflet-container {
                    height: 250px
                }
            }
            .month-picker-month-table a.ui-state-highlight {
                background: #fff;
                color: #444;
            }
            .month-picker-month-table a.ui-state-highlight > span {
                font-weight: bold;
            }
            .month-picker-month-table a.ui-state-active {
                background: #337ab7;
                color: #fff;
            }
        </style>
        <h:outputStylesheet library="css" name="leaflet.css"/>
        <h:outputStylesheet library="css" name="markercluster.default.css"/>
        <h:outputStylesheet library="css" name="markercluster.css"/>
        <h:outputStylesheet library="css" name="monthpicker.min.css"/>

    </ui:define>

    <ui:define name="title">

    </ui:define>

    <ui:define name="description">
    </ui:define>

    <ui:define name="body">
        <h:form>
            <p:remoteCommand name="updateStatistics" action="#{pathDetailsController.updateStatistics}"
                             process="@form"
                             oncomplete="initStats()"/>
            <div class="ui-g" style="text-align: center;font-size: 1.2em">
                <div class="ui-g-6" >
                    <p:panel header="Paths Detail"  styleClass="card  box-fatal" style="height:480px;">
                        <h:panelGrid columns="2" cellpadding="10" columnClasses="ui-grid-col-4,ui-grid-col-8">
                            <p:outputLabel  value="Id: " style="text-align: left;margin-bottom: 10px;"/>
                            <p:outputLabel  value="#{pathDetailsController.pathId}" style="text-align: left;margin-bottom: 10px;"/>                              
                            <p:outputLabel  value="Name: " style="text-align: left;margin-bottom: 10px;"/>
                            <p:outputLabel  value="#{pathDetailsController.path.pathName}" style="text-align: left;margin-bottom: 10px;"/>
                            <p:outputLabel  value="Region :" style="text-align: left;margin-bottom: 10px;"/>
                            <p:outputLabel  value="#{pathDetailsController.region}" style="text-align: left;margin-bottom: 10px;"/>
                            <p:outputLabel  value="Length :" style="text-align: left;margin-bottom: 10px;"/>
                            <p:outputLabel  value="#{pathDetailsController.pathDistance}" style="text-align: left;margin-bottom: 10px;"/> 
                        </h:panelGrid>
                    </p:panel>
                </div>
                <div class="ui-g-6">
                    <p:panel header="Path Position"  styleClass="card  box-fatal">
                        <h:panelGrid columns="1" cellpadding="10">
                            <div tabindex="0" class="leaflet-container leaflet-fade-anim" id="map">
                                <div style="transform: translate(0px, 0px);" class="leaflet-map-pane">
                                    <div class="leaflet-tile-pane">
                                        <div class="leaflet-layer">
                                            <div class="leaflet-tile-container"></div>
                                            <div class="leaflet-tile-container leaflet-zoom-animated"></div>
                                            <div class="leaflet-marker-pane"></div>
                                            <div class="leaflet-popup-pane"></div>
                                        </div>
                                    </div>
                                    <div class="leaflet-control-container">
                                        <div class="leaflet-top leaflet-left">
                                            <div class="leaflet-control-zoom leaflet-bar leaflet-control">
                                                <a title="Zoom in" href="#" class="leaflet-control-zoom-in">+</a><a
                                                    title="Zoom out" href="#" class="leaflet-control-zoom-out">-</a>
                                            </div>
                                        </div>
                                        <div class="leaflet-control-attribution leaflet-control">
                                            <a href="http://leafletjs.com/"
                                               title="A JS library for interactive maps">Leaflet</a> | Map data
                                            © <a href="http://openstreetmap.org/">OpenStreetMap</a>
                                            contributors, <a
                                                href="http://creativecommons.org/licenses/by-sa/2.0/">CC-BY-SA</a>,
                                            Imagery © <a href="http://mapbox.com/">Mapbox</a>, Population data
                                            © <a href="http://census.gov/">US Census Bureau</a>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </h:panelGrid>
                    </p:panel>
                </div>
            </div>

            <div class="ui-g" style="text-align: center;font-size: 1.5em" >
                <div class="ui-g-12">

                    <p:outputLabel value="Statistics"/>
                </div>
            </div>
            <p:tabView styleClass="card">
                <p:tab title="Statistics per Day">
                    <p:panel styleClass="card" >
                        <div class="row" style="text-align: left;font-size: 1.2em">
                            <div class="ui-g-12">
                                <p:outputLabel for="day" value="Select Day" style="margin-left: 20px; margin-right: 20px;" />
                                <p:calendar id="day" value="#{pathDetailsController.day}" >
                         
                                </p:calendar>
         
                                <p:commandButton value="Show" id="withIcon" action="#{pathDetailsController.buttonAction}"
                                                 update="dailyStats" style="margin-right:20px; margin-left: 20px;"
                                                 icon="fa fa-bar-chart" styleClass="btn-primary" disabled="#{pathDetailsController.enableSelectDayButton}"/>
                
                            </div>
                        </div>
                        <p:outputPanel id="dailyStats" style=" border-style: none;" >
                            <p:panel  rendered="#{pathDetailsController.showDailyStatistics}" style=" border-style: none;" >  
                                <div class="row" style="text-align: left;font-size: 1.2em">
                                    <div class="ui-lg-6 ui-g-12">
                                     <p:lineChart model="#{pathDetailsController.speed}" style= "height: 400px;"/>
                                    </div>
                                    <div class="ui-lg-6 ui-g-12">
                                     <p:lineChart model="#{pathDetailsController.time}" style= "height: 400px;"/>
                                    </div>
                                </div>
                                <div class="row" style="text-align: left;font-size: 1.2em">
                                        <div class="ui-lg-6 ui-g-12">
                                        <p:barChart model="#{pathDetailsController.count}" style="height: 400px;"/>
                                    </div>
                                        <div class="ui-lg-6 ui-g-12">
                                     
                                    </div>
                                </div>
                            </p:panel>  
                        </p:outputPanel>

                    </p:panel>

                </p:tab>
                <p:tab title="Statistics per Month">
                    <h:panelGrid columns="2" cellpadding="10">
                        <p:graphicImage name="demo/images/godfather/godfather2.jpg" />
                                        <p:datePicker id="month" view="month" value="#{pathDetailsController.month}" pattern="MM/yyyy" yearNavigator="true" yearRange="2017:2030" />
                        <h:outputText value="Francis Ford Coppola's legendary continuation and sequel to his landmark 1972 film, The_Godfather, parallels the young Vito Corleone's rise with his son Michael's spiritual fall, deepening The_Godfather's depiction of the dark side of the American dream. 
                                      In the early 1900s, the child Vito flees his Sicilian village for America after the local Mafia kills his family. Vito struggles to make a living, legally or illegally, for his wife and growing brood in Little Italy, 
                                      killing the local Black Hand Fanucci after he demands his customary cut of the tyro's business. With Fanucci gone, Vito's communal stature grows." />
                    </h:panelGrid>
                </p:tab>
            </p:tabView>

        </h:form>
    </ui:define>

    <ui:define name="content-end">

        <h:outputScript library="js" name="leaflet/leaflet.js"/>
        <h:outputScript library="js" name="leaflet/markercluster.js"/>
        <h:outputScript library="js" name="jquery-ui.min.js"/>
        <h:outputScript library="js" name="jquery-migrate-3.0.0.min.js"/>
        <h:outputScript library="js" name="monthpicker.min.js"/>
        <h:outputScript library="js" name="maskedinput.min.js"/>
        <!--        <h:outputScript library="js" name="plotly-latest.min.js"/>
                 <h:outputScript library="js" name="chart.min.js"/>-->

        <script type="text/javascript">
            //            $(document).ready(function () {
            //                $('.statsDate').MonthPicker({
            //                    ShowOn: 'click',
            //                    ShowIcon: true,
            //                    Button: false,
            //                    ShowAnim: 'slideDown',
            //                    StartYear: #{pathDetailsController.initialStatisticsYear},
            //                    OnAfterChooseMonth: function (selectedDate) {
            //                        updateStatistics({name1: selectedDate});
            //                    }
            //                });
            //            });
        </script>


        <p:outputPanel styleClass="analyticsScripts">
            <script type="text/javascript">
                //<![CDATA[
                var mbAttr = 'Map data &copy; <a href="http://openstreetmap.org">OpenStreetMap</a> contributors ',
                        mbUrl = 'http://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png',
                        mbUrl2 = 'http://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}';
                //base layers
                var streets = L.tileLayer(mbUrl, {id: 'examples.map-i875mjb7', attribution: mbAttr}),
                        grayscale = L.tileLayer(mbUrl2, {id: 'examples.map-20v6611k', attribution: mbAttr});
                var pageViewsLayer = new L.markerClusterGroup();
                var baseLayers = {
                    "Streets": streets,
                    "Grayscale": grayscale
                };
                var overlays = {
                    "Page views": pageViewsLayer
                };
                var map = L.map('map', {
                    center: [20.55, 15],
                    zoom: 2,
                    maxZoom: 18,
                    minZoom: 1,
                    layers: [streets] //initial base layer
                });
                $(document).ready(function () {
                    // initStats();
                    map.invalidateSize();
                    createMap();
                    console.log("oncreate");
                });
                function initStats() {
                    console.log("initStats");

                    //                    map.invalidateSize();
                    //                      createMap();
                    //                    $('.statsDate').MonthPicker({
                    //                        ShowOn: 'click',
                    //                        ShowIcon: false,
                    //                        Button: false,
                    //                        ShowAnim: 'slideDown',
                    //                        StartYear: #{analyticsMB.initialStatisticsYear},
                    //                        OnAfterChooseMonth: function (selectedDate) {
                    //                            updateStatistics({name1: selectedDate});
                    //                        }
                    //                    });
                    //                    var visitorsByMonthChartCanvas = $("#visitorsByMonthChart").get(0).getContext("2d");
                    //                    var visitorsByMonthChartData = {
                    //                        labels: ["January", "February", "March", "April", "May", "June", "July", "August", "September", "October", "November", "December"],
                    //                        datasets: [
                    //                            {
                    //                                label: "Total visitors",
                    //                                fillColor: "rgb(210, 214, 222)",
                    //                                strokeColor: "rgb(210, 214, 222)",
                    //                                pointColor: "rgb(210, 214, 222)",
                    //                                pointStrokeColor: "#c1c7d1",
                    //                                pointHighlightFill: "#fff",
                    //                                pointHighlightStroke: "rgb(220,220,220)",
                    //                                data: #{analyticsMB.totalVisitorsByMonth}
                    //                            },
                    //                            {
                    //                                label: "Unique visitors",
                    //                                fillColor: "rgba(60,141,188,0.9)",
                    //                                strokeColor: "rgba(60,141,188,0.8)",
                    //                                pointColor: "#3b8bba",
                    //                                pointStrokeColor: "rgba(60,141,188,1)",
                    //                                pointHighlightFill: "#fff",
                    //                                pointHighlightStroke: "rgba(60,141,188,1)",
                    //                                data: #{analyticsMB.uniqueVisitorsByMonth}
                    //                            }
                    //                        ]
                    //                    };
                    //                    //Create the line chart
                    //                    createLineChart(visitorsByMonthChartCanvas, visitorsByMonthChartData);
                    //                    var visitorsByPageCanvas = $("#visitorsByPageChart").get(0).getContext("2d");
                    //                    //Create the pie chart
                    //                    createPieChart(visitorsByPageCanvas, #{analyticsMB.visitorsByPage});
                    //                    var visitorsByCountryCanvas = $("#visitorsByCountryChart").get(0).getContext("2d");
                    //                    //Create the pie chart
                    //                    createBarChart(visitorsByCountryCanvas, #{analyticsMB.visitorsByCountry});
                    //                    createMap();
                }
                function createMap() {
                    console.log("createMap");

                    var pointString = #{pathDetailsController.pathJSONString};
                    console.log(pointString["points"].length);
                    var allPoints = pointString["points"];
                    var polylinePoints = [];
                    for (i = 0; i < pointString["points"].length; i++) {

                        var tmpPoint = new L.LatLng(allPoints[i][1], allPoints[i][0]);
                        polylinePoints.push(tmpPoint);
                    }
                    var pointA = new L.LatLng(28.635308, 77.22496);
                    var pointB = new L.LatLng(28.984461, 77.70641);
                    var pointList = [pointA, pointB];

                    var firstpolyline = new L.Polyline(polylinePoints, {
                        color: 'blue',
                        weight: 6,
                        opacity: 0.5,
                        smoothFactor: 1
                    });
                    firstpolyline.addTo(map);
                    // zoom the map to the polyline
                    map.fitBounds(firstpolyline.getBounds());
                    console.log("polyline");
                    function markerOnClick(e) {
                        map.panTo(new L.LatLng(e.latlng.lat, e.latlng.lng));
                    }
                }
                //]]>
            </script>
        </p:outputPanel>
    </ui:define>
</ui:composition>
